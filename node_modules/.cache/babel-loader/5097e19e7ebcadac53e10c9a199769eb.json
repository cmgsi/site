{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/charles/Desktop/foamtree-Site/src/queries/Aexemplo.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { start } from './TesteQuery';\nimport React, { useEffect, useState } from 'react'; // export  function CallList() {\n//   const [list, setList] = useState([]);\n//   useEffect(() => {\n//     let mounted = true;\n//     start()\n//       .then(items => {\n//         if (mounted) {\n//           setList(items)\n//         }\n//       })\n//     return () => mounted = false;\n//   }, [])\n//   return (list)\n// }\n\nconst Main = styled(\"div\")`\n  font-family: sans-serif;\n  background: #f0f0f0;\n  height: 28vh;\n`;\n_c = Main;\nconst DropDownContainer = styled(\"div\")`\n  width: 10.5em;\n  margin: 0 auto;\n`;\n_c2 = DropDownContainer;\nconst DropDownHeader = styled(\"div\")`\n  margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  font-weight: 200;\n  font-size: 0.73rem;\n  color: #3faffa;\n  background: #ffffff;\n`;\n_c3 = DropDownHeader;\nconst DropDownListContainer = styled(\"div\")``;\n_c4 = DropDownListContainer;\nconst DropDownList = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #ffffff;\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n  color: #3faffa;\n  font-size: 0.73rem;\n  font-weight: 400;\n  overflow-y: scroll; \n  height: 20vh;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`;\n_c5 = DropDownList;\nconst ListItem = styled(\"li\")`\n  list-style: none;\n  margin-bottom: 0.1em;\n`;\n_c6 = ListItem;\nvar options = [];\n\nfunction App() {\n  _s();\n\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    start().then(items => {\n      if (mounted) {\n        setList(items);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  options = list;\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n    console.log(selectedOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Cidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDownContainer, {\n      children: [/*#__PURE__*/_jsxDEV(DropDownHeader, {\n        onClick: toggling,\n        children: selectedOption || \"São Paulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(DropDownListContainer, {\n        children: /*#__PURE__*/_jsxDEV(DropDownList, {\n          children: options.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: onOptionClicked(option),\n            children: option\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YJYpbyzCfe8mysiMHgahMQzaOgE=\");\n\n_c7 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"DropDownContainer\");\n$RefreshReg$(_c3, \"DropDownHeader\");\n$RefreshReg$(_c4, \"DropDownListContainer\");\n$RefreshReg$(_c5, \"DropDownList\");\n$RefreshReg$(_c6, \"ListItem\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"sources":["/home/charles/Desktop/foamtree-Site/src/queries/Aexemplo.js"],"names":["styled","start","React","useEffect","useState","Main","DropDownContainer","DropDownHeader","DropDownListContainer","DropDownList","ListItem","options","App","list","setList","mounted","then","items","isOpen","setIsOpen","selectedOption","setSelectedOption","toggling","onOptionClicked","value","console","log","map","option","Math","random"],"mappings":";;;;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,IAAI,GAAGL,MAAM,CAAC,KAAD,CAAQ;AAC3B;AACA;AACA;AACA,CAJA;KAAMK,I;AAMN,MAAMC,iBAAiB,GAAGN,MAAM,CAAC,KAAD,CAAQ;AACxC;AACA;AACA,CAHA;MAAMM,iB;AAKN,MAAMC,cAAc,GAAGP,MAAM,CAAC,KAAD,CAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMO,c;AAUN,MAAMC,qBAAqB,GAAGR,MAAM,CAAC,KAAD,CAAQ,EAA5C;MAAMQ,qB;AAEN,MAAMC,YAAY,GAAGT,MAAM,CAAC,IAAD,CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMS,Y;AAiBN,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAO;AAC9B;AACA;AACA,CAHA;MAAMU,Q;AAKN,IAAIC,OAAO,GAAG,EAAd;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,GAAG,IAAd;AACAd,IAAAA,KAAK,GACFe,IADH,CACQC,KAAK,IAAI;AACb,UAAIF,OAAJ,EAAa;AACXD,QAAAA,OAAO,CAACG,KAAD,CAAP;AACD;AACF,KALH;AAMA,WAAO,MAAMF,OAAO,GAAG,KAAvB;AACD,GATQ,EASN,EATM,CAAT;AAUAJ,EAAAA,OAAO,GAAEE,IAAT;AAGA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMkB,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAACD,MAAF,CAAhC;;AAEA,QAAMK,eAAe,GAAGC,KAAK,IAAI,MAAM;AACrCH,IAAAA,iBAAiB,CAACG,KAAD,CAAjB;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACD,GAJD;;AAMA,sBACE,QAAC,IAAD;AAAA,4BACE;AAAA,6BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEE,QAAzB;AAAA,kBACGF,cAAc,IAAI;AADrB;AAAA;AAAA;AAAA;AAAA,cADF,EAIGF,MAAM,iBACL,QAAC,qBAAD;AAAA,+BACE,QAAC,YAAD;AAAA,oBACGP,OAAO,CAACgB,GAAR,CAAYC,MAAM,iBACjB,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEL,eAAe,CAACK,MAAD,CAAlC;AAAA,sBACGA;AADH,aAAiDC,IAAI,CAACC,MAAL,EAAjD;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAjDQlB,G;;MAAAA,G;AAmDR,eAAeA,GAAf","sourcesContent":["\nimport styled from 'styled-components';\nimport { start } from './TesteQuery'\n\nimport React, { useEffect, useState } from 'react';\n\n// export  function CallList() {\n//   const [list, setList] = useState([]);\n\n//   useEffect(() => {\n//     let mounted = true;\n//     start()\n//       .then(items => {\n//         if (mounted) {\n//           setList(items)\n//         }\n//       })\n//     return () => mounted = false;\n//   }, [])\n//   return (list)\n// }\n\n\n\nconst Main = styled(\"div\")`\n  font-family: sans-serif;\n  background: #f0f0f0;\n  height: 28vh;\n`;\n\nconst DropDownContainer = styled(\"div\")`\n  width: 10.5em;\n  margin: 0 auto;\n`;\n\nconst DropDownHeader = styled(\"div\")`\n  margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  font-weight: 200;\n  font-size: 0.73rem;\n  color: #3faffa;\n  background: #ffffff;\n`;\n\nconst DropDownListContainer = styled(\"div\")``;\n\nconst DropDownList = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #ffffff;\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n  color: #3faffa;\n  font-size: 0.73rem;\n  font-weight: 400;\n  overflow-y: scroll; \n  height: 20vh;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`;\n\nconst ListItem = styled(\"li\")`\n  list-style: none;\n  margin-bottom: 0.1em;\n`;\n\nvar options = [] \n\nfunction App() {\n\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n    start()\n      .then(items => {\n        if (mounted) {\n          setList(items)\n        }\n      })\n    return () => mounted = false;\n  }, [])\n  options= list\n\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n    console.log(selectedOption);\n  };\n\n  return (\n    <Main>\n      <center><h6>Cidades</h6></center>\n      <DropDownContainer>\n        <DropDownHeader onClick={toggling}>\n          {selectedOption || \"São Paulo\"}\n        </DropDownHeader>\n        {isOpen && (\n          <DropDownListContainer>\n            <DropDownList>\n              {options.map(option => (\n                <ListItem onClick={onOptionClicked(option)} key={Math.random()}>\n                  {option}\n                </ListItem>\n              ))}\n            </DropDownList>\n          </DropDownListContainer>\n        )}\n      </DropDownContainer>\n    </Main>\n  );\n}\n\n export default App;"]},"metadata":{},"sourceType":"module"}