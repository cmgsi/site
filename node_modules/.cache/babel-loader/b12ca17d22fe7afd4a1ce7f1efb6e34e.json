{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/charles/Desktop/foamtree-Site/src/OperationLog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport \"./OperationLog.css\";\nimport { view } from \"react-easy-state\";\n\nconst LogEntry = ({\n  entry\n}) => {\n  let level;\n\n  switch (entry.code.charAt(0)) {\n    case \"I\":\n      level = \"info\";\n      break;\n\n    case \"W\":\n    default:\n      level = \"warning\";\n      break;\n\n    case \"E\":\n      level = \"error\";\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `LogEntry ${level}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [entry.code, \":\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: entry.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LogEntry;\nexport const OperationLog = view(_c2 = _s(({\n  log\n}) => {\n  _s();\n\n  const element = useRef();\n  useEffect(() => {\n    element.current.scrollTop = element.current.scrollHeight;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"OperationLog\",\n    ref: element,\n    children: log.entries.map((e, i) => /*#__PURE__*/_jsxDEV(LogEntry, {\n      entry: e\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}, \"SpBhasJPVJrZGxeF9Xbi1q4ov4I=\"));\n_c3 = OperationLog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LogEntry\");\n$RefreshReg$(_c2, \"OperationLog$view\");\n$RefreshReg$(_c3, \"OperationLog\");","map":{"version":3,"sources":["/home/charles/Desktop/foamtree-Site/src/OperationLog.js"],"names":["React","useRef","useEffect","view","LogEntry","entry","level","code","charAt","message","OperationLog","log","element","current","scrollTop","scrollHeight","entries","map","e","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAO,oBAAP;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,MAAIC,KAAJ;;AACA,UAAQD,KAAK,CAACE,IAAN,CAAWC,MAAX,CAAkB,CAAlB,CAAR;AACE,SAAK,GAAL;AAAUF,MAAAA,KAAK,GAAG,MAAR;AAAgB;;AAC1B,SAAK,GAAL;AAAU;AAASA,MAAAA,KAAK,GAAG,SAAR;AAAmB;;AACtC,SAAK,GAAL;AAAUA,MAAAA,KAAK,GAAG,OAAR;AAAiB;AAH7B;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAG,YAAWA,KAAM,EAAlC;AAAA,4BACE;AAAA,iBAAMD,KAAK,CAACE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMF,KAAK,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAbD;;KAAML,Q;AAeN,OAAO,MAAMM,YAAY,GAAGP,IAAI,UAAC,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC5C,QAAMC,OAAO,GAAGX,MAAM,EAAtB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,OAAR,CAAgBC,SAAhB,GAA4BF,OAAO,CAACC,OAAR,CAAgBE,YAA5C;AACD,GAFQ,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEH,OAAnC;AAAA,cAEID,GAAG,CAACK,OAAJ,CAAYC,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,kBAAU,QAAC,QAAD;AAAkB,MAAA,KAAK,EAAED;AAAzB,OAAeC,CAAf;AAAA;AAAA;AAAA;AAAA,YAA1B;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD,CAZ+B,kCAAzB;MAAMT,Y","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport \"./OperationLog.css\";\n\nimport { view } from \"react-easy-state\";\n\nconst LogEntry = ({ entry }) => {\n  let level;\n  switch (entry.code.charAt(0)) {\n    case \"I\": level = \"info\"; break;\n    case \"W\": default: level = \"warning\"; break;\n    case \"E\": level = \"error\"; break;\n  }\n  return (\n    <div className={`LogEntry ${level}`}>\n      <div>{entry.code}:&nbsp;</div>\n      <div>{entry.message}</div>\n    </div>\n  );\n};\n\nexport const OperationLog = view(({ log }) => {\n  const element = useRef();\n  useEffect(() => {\n    element.current.scrollTop = element.current.scrollHeight;\n  });\n  return (\n      <div className=\"OperationLog\" ref={element}>\n        {\n          log.entries.map((e, i) => <LogEntry key={i} entry={e} />)\n        }\n      </div>\n  );\n});"]},"metadata":{},"sourceType":"module"}