{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/charles/Desktop/foamtree-Site/src/carrotsearch/Visualization.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nVisualization.propTypes = {\n  impl: PropTypes.object.isRequired,\n  implRef: PropTypes.object,\n  options: PropTypes.object,\n  dataObject: PropTypes.object.isRequired,\n  selection: PropTypes.array\n};\n/**\n * Implementation base for Circles and FoamTree.\n */\n\nexport function Visualization(props) {\n  _s();\n\n  const element = useRef(null);\n  const instance = useRef(null); // Dispose on unmount\n\n  useEffect(() => {\n    if (instance.current) {\n      props.impl.dispose(instance.current);\n      instance.current = undefined;\n    }\n  }, [props.impl]);\n  useEffect(() => {\n    if (instance.current) {\n      props.impl.set(instance.current, props.options);\n    } else {\n      instance.current = props.impl.embed({\n        element: element.current,\n        pixelRatio: window.devicePixelRatio || 1,\n        ...props.options\n      });\n\n      if (props.implRef) {\n        props.implRef.current = instance.current;\n      }\n    }\n  }, [props.options, props.impl, props.implRef]);\n  useEffect(() => {\n    if (instance.current) {\n      props.impl.set(instance.current, \"dataObject\", props.dataObject);\n    }\n  }, [props.dataObject, props.impl]);\n  useEffect(() => {\n    if (instance.current) {\n      props.impl.select(instance.current, {\n        groups: props.selection,\n        keepPrevious: false\n      });\n    }\n  }, [props.selection, props.impl]);\n  useEffect(() => {\n    let timeout;\n\n    const onResize = () => {\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(() => {\n        props.impl.resize(instance.current);\n      }, 300);\n    };\n\n    window.addEventListener(\"resize\", onResize);\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, [props.impl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: element,\n    style: {\n      position: \"absolute\",\n      top: 140,\n      bottom: 0,\n      left: 0,\n      right: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Visualization, \"+1PNpkwd8FoilV9Hg+RDoRizwIo=\");\n\n_c = Visualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualization\");","map":{"version":3,"sources":["/home/charles/Desktop/foamtree-Site/src/carrotsearch/Visualization.js"],"names":["React","useEffect","useRef","PropTypes","Visualization","propTypes","impl","object","isRequired","implRef","options","dataObject","selection","array","props","element","instance","current","dispose","undefined","set","embed","pixelRatio","window","devicePixelRatio","select","groups","keepPrevious","timeout","onResize","clearTimeout","setTimeout","resize","addEventListener","removeEventListener","position","top","bottom","left","right"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nVisualization.propTypes = {\n  impl: PropTypes.object.isRequired,\n  implRef: PropTypes.object,\n  options: PropTypes.object,\n  dataObject: PropTypes.object.isRequired,\n  selection: PropTypes.array\n};\n\n/**\n * Implementation base for Circles and FoamTree.\n */\nexport function Visualization(props) {\n  const element = useRef(null);\n  const instance = useRef(null);\n\n  // Dispose on unmount\n  useEffect(() => {\n    if (instance.current) {\n      props.impl.dispose(instance.current);\n      instance.current = undefined;\n    }\n  }, [ props.impl ]);\n\n  useEffect(() => {\n    if (instance.current) {\n      props.impl.set(instance.current, props.options);\n    } else {\n      instance.current = props.impl.embed({\n        element: element.current,\n        pixelRatio: window.devicePixelRatio || 1,\n        ...props.options\n      });\n      if (props.implRef) {\n        props.implRef.current = instance.current;\n      }\n    }\n  }, [ props.options, props.impl, props.implRef ]);\n\n  useEffect(() => {\n    if (instance.current) {\n      props.impl.set(instance.current, \"dataObject\", props.dataObject);\n    }\n  }, [ props.dataObject, props.impl ]);\n\n  useEffect(() => {\n    if (instance.current) {\n      props.impl.select(instance.current, { groups: props.selection, keepPrevious: false });\n    }\n  }, [ props.selection, props.impl ]);\n\n  useEffect(() => {\n    let timeout;\n    const onResize = () => {\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(() => {\n        props.impl.resize(instance.current);\n      }, 300);\n    };\n\n    window.addEventListener(\"resize\", onResize);\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, [ props.impl ]);\n\n  return (\n    <div ref={element} style={{ position: \"absolute\", top: 140, bottom: 0, left: 0, right: 0 }}/>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}