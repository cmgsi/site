{"ast":null,"code":"const ArrayBufferReadable = require('./ArrayBufferReadable');\n\nconst PatchableResponse = require('./PatchableResponse');\n\nconst ReadableError = require('readable-error');\n\nconst WhatwgReadable = require('./WhatwgReadable');\n\nfunction patch(res) {\n  // not implemented in Firefox 51\n\n  /* if (!res.body) {\n    return res\n  } */\n  if (res.bodyUsed) {\n    res.body = new ReadableError(new Error('body already in use'));\n  } else if (res.body && res.body.getReader) {\n    // replace respsonse with a patchable implementation\n    res = new PatchableResponse(res, {\n      body: new WhatwgReadable(res.body.getReader())\n    });\n  } else if (res.body && res.body.readable) {} else {\n    res.body = new ArrayBufferReadable(() => {\n      return res.arrayBuffer();\n    });\n  }\n\n  return res;\n}\n\nmodule.exports = patch;","map":{"version":3,"sources":["/home/charles/Desktop/foamtree-Site/node_modules/nodeify-fetch/lib/patchResponse.js"],"names":["ArrayBufferReadable","require","PatchableResponse","ReadableError","WhatwgReadable","patch","res","bodyUsed","body","Error","getReader","readable","arrayBuffer","module","exports"],"mappings":"AAAA,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAnC;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,gBAAD,CAA7B;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAD,CAA9B;;AAEA,SAASI,KAAT,CAAgBC,GAAhB,EAAqB;AACnB;;AACA;AACF;AACA;AAEE,MAAIA,GAAG,CAACC,QAAR,EAAkB;AAChBD,IAAAA,GAAG,CAACE,IAAJ,GAAW,IAAIL,aAAJ,CAAkB,IAAIM,KAAJ,CAAU,qBAAV,CAAlB,CAAX;AACD,GAFD,MAEO,IAAIH,GAAG,CAACE,IAAJ,IAAYF,GAAG,CAACE,IAAJ,CAASE,SAAzB,EAAoC;AACzC;AACAJ,IAAAA,GAAG,GAAG,IAAIJ,iBAAJ,CAAsBI,GAAtB,EAA2B;AAC/BE,MAAAA,IAAI,EAAE,IAAIJ,cAAJ,CAAmBE,GAAG,CAACE,IAAJ,CAASE,SAAT,EAAnB;AADyB,KAA3B,CAAN;AAGD,GALM,MAKA,IAAIJ,GAAG,CAACE,IAAJ,IAAYF,GAAG,CAACE,IAAJ,CAASG,QAAzB,EAAmC,CACzC,CADM,MACA;AACLL,IAAAA,GAAG,CAACE,IAAJ,GAAW,IAAIR,mBAAJ,CAAwB,MAAM;AACvC,aAAOM,GAAG,CAACM,WAAJ,EAAP;AACD,KAFU,CAAX;AAGD;;AAED,SAAON,GAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,KAAjB","sourcesContent":["const ArrayBufferReadable = require('./ArrayBufferReadable')\nconst PatchableResponse = require('./PatchableResponse')\nconst ReadableError = require('readable-error')\nconst WhatwgReadable = require('./WhatwgReadable')\n\nfunction patch (res) {\n  // not implemented in Firefox 51\n  /* if (!res.body) {\n    return res\n  } */\n\n  if (res.bodyUsed) {\n    res.body = new ReadableError(new Error('body already in use'))\n  } else if (res.body && res.body.getReader) {\n    // replace respsonse with a patchable implementation\n    res = new PatchableResponse(res, {\n      body: new WhatwgReadable(res.body.getReader())\n    })\n  } else if (res.body && res.body.readable) {\n  } else {\n    res.body = new ArrayBufferReadable(() => {\n      return res.arrayBuffer()\n    })\n  }\n\n  return res\n}\n\nmodule.exports = patch\n"]},"metadata":{},"sourceType":"script"}