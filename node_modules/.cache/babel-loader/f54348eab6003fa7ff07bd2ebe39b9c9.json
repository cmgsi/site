{"ast":null,"code":"const Endpoint = require('./Endpoint');\n\nconst RawQuery = require('./RawQuery');\n\nconst BaseClient = require('./BaseClient');\n/**\n * A basic client implementation which uses RawQuery and no Store\n *\n * @property {RawQuery} query\n */\n\n\nclass SimpleClient extends BaseClient {\n  /**\n   * @param {Object} options\n   * @param {string} options.endpointUrl SPARQL Query endpoint URL\n   * @param {fetch} [options.fetch=nodeify-fetch] fetch implementation\n   * @param {HeadersInit} [options.headers] HTTP headers to send with every endpoint request\n   * @param {string} [options.password] password used for basic authentication\n   * @param {string} [options.storeUrl] Graph Store URL\n   * @param {string} [options.updateUrl] SPARQL Update endpoint URL\n   * @param {string} [options.user] user used for basic authentication\n   * @param {factory} [options.factory] RDF/JS DataFactory\n   */\n  constructor(options) {\n    super({\n      endpoint: new Endpoint(options),\n      factory: options.factory,\n      Query: RawQuery\n    });\n  }\n\n}\n\nmodule.exports = SimpleClient;","map":{"version":3,"sources":["/home/charles/Desktop/foamtree-Site/node_modules/sparql-http-client/SimpleClient.js"],"names":["Endpoint","require","RawQuery","BaseClient","SimpleClient","constructor","options","endpoint","factory","Query","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,cAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,YAAN,SAA2BD,UAA3B,CAAsC;AACpC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEE,EAAAA,WAAW,CAAEC,OAAF,EAAW;AACpB,UAAM;AACJC,MAAAA,QAAQ,EAAE,IAAIP,QAAJ,CAAaM,OAAb,CADN;AAEJE,MAAAA,OAAO,EAAEF,OAAO,CAACE,OAFb;AAGJC,MAAAA,KAAK,EAAEP;AAHH,KAAN;AAKD;;AAlBmC;;AAqBtCQ,MAAM,CAACC,OAAP,GAAiBP,YAAjB","sourcesContent":["const Endpoint = require('./Endpoint')\nconst RawQuery = require('./RawQuery')\nconst BaseClient = require('./BaseClient')\n\n/**\n * A basic client implementation which uses RawQuery and no Store\n *\n * @property {RawQuery} query\n */\nclass SimpleClient extends BaseClient {\n  /**\n   * @param {Object} options\n   * @param {string} options.endpointUrl SPARQL Query endpoint URL\n   * @param {fetch} [options.fetch=nodeify-fetch] fetch implementation\n   * @param {HeadersInit} [options.headers] HTTP headers to send with every endpoint request\n   * @param {string} [options.password] password used for basic authentication\n   * @param {string} [options.storeUrl] Graph Store URL\n   * @param {string} [options.updateUrl] SPARQL Update endpoint URL\n   * @param {string} [options.user] user used for basic authentication\n   * @param {factory} [options.factory] RDF/JS DataFactory\n   */\n  constructor (options) {\n    super({\n      endpoint: new Endpoint(options),\n      factory: options.factory,\n      Query: RawQuery\n    })\n  }\n}\n\nmodule.exports = SimpleClient\n"]},"metadata":{},"sourceType":"script"}