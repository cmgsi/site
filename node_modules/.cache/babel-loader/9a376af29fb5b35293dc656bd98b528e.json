{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/charles/Desktop/foamtree-Site1/src/FoamTreeCsv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { FoamTreePanel, prepareDataObject, forEachDescendant } from \"./FoamTreePanel.js\";\nimport SettingsPanel from \"./SettingsPanel.js\";\nimport { useDropzone } from 'react-dropzone';\nimport { Worksheet2FoamTree } from \"./carrotsearch/spreadsheet.js\";\nimport { Welcome } from \"./Welcome.js\";\nimport { OperationLog } from \"./OperationLog.js\";\nimport { saveAs } from 'file-saver';\nimport cloneDeep from \"lodash.clonedeep\";\nimport { logStore } from \"./stores.js\";\nimport XLSX from \"xlsx\";\nimport './FoamTreeCsv.css';\nimport { ButtonLink } from \"./carrotsearch/ui/ButtonLink.js\";\nimport App from \"./App\";\nconst baseStyle = {\n  borderWidth: 4,\n  borderRadius: 2,\n  borderColor: 'transparent',\n  borderStyle: 'dashed',\n  background: \"#fff\",\n  outline: 'none',\n  position: \"absolute\",\n  top: \"0.5em\",\n  bottom: \"0.5em\",\n  left: \"0.5em\",\n  right: \"0.5em\" // boxShadow: \"0 0 5px rgba(0, 0, 0, 0.1)\"\n\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: 'hsl(90, 100%, 35%)'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst FoamTreeCsv = () => {\n  _s();\n\n  const [dataObject, setDataObject] = useState({});\n\n  const loadSpreadsheet = (buffer, fileName) => {\n    logStore.entries.push({\n      message: `Parsing ${fileName}.`,\n      code: \"I001\"\n    });\n    window.setTimeout(() => {\n      const workbook = XLSX.read(buffer, {\n        type: \"array\"\n      });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const parser = Worksheet2FoamTree.parse(sheet);\n      parser.getLog().map(l => ({\n        code: l.code,\n        message: Worksheet2FoamTree.getMessage(l)\n      })).forEach(e => logStore.entries.push(e));\n      const propertyNames = parser.getPropertyNames();\n      const dataObject = prepareDataObject(propertyNames, parser.getDataObject());\n      const count = dataObject ? dataObject.groups.reduce(function counter(cnt, group) {\n        return cnt + 1 + (group.groups ? group.groups.reduce(counter, 0) : 0);\n      }, 0) : 0;\n      logStore.entries.push({\n        message: `Visualizing ${fileName} (${count} groups).`,\n        code: \"I002\"\n      });\n      setDataObject(dataObject);\n    }, 50);\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log('file reading was aborted');\n\n    reader.onerror = () => console.log('file reading has failed');\n\n    reader.onload = () => loadSpreadsheet(reader.result, file.name);\n\n    reader.readAsArrayBuffer(file);\n  }, []);\n  const {\n    getRootProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    onDrop\n  });\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n  const loadExample = useCallback(name => {\n    setDataObject({\n      groups: []\n    });\n    window.setTimeout(() => {\n      fetch(`examples/${name}`).then(response => response.arrayBuffer()).then(response => loadSpreadsheet(response, name));\n    }, 50);\n  }, []); // Load some example on start\n\n  useEffect(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      loadExample(`example.ods`);\n    }\n  }, [loadExample]);\n  const foamTreeRef = useRef(undefined);\n\n  const exportFoamTreeData = (extesion, fn = x => x) => {\n    if (foamTreeRef.current) {\n      const data = cloneDeep(foamTreeRef.current.get(\"dataObject\"));\n      forEachDescendant(data, group => {\n        delete group[\"parent\"];\n      });\n      saveAs(new Blob([fn(JSON.stringify(data, null, \"  \"))], {\n        type: \"application/json;charset=utf-8\"\n      }), `foamtree-data.${extesion}`);\n    }\n  };\n\n  const exportJson = useCallback(() => {\n    exportFoamTreeData(\"json\");\n  }, []);\n  const exportJsonP = useCallback(() => {\n    exportFoamTreeData(\"js\", json => {\n      return `modelDataAvailable(${json})`;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n      style\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"FoamTreeCsv\",\n      style: {\n        visibility: !!dataObject.groups ? \"visible\" : \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization\",\n        children: /*#__PURE__*/_jsxDEV(FoamTreePanel, {\n          dataObject: dataObject,\n          foamTreeRef: foamTreeRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings\",\n        children: [/*#__PURE__*/_jsxDEV(SettingsPanel, {\n          welcomeClicked: () => setDataObject({}),\n          exportJsonClicked: exportJson,\n          exportJsonPClicked: exportJsonP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\",\n            marginBottom: \"0.25em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ButtonLink, {\n            onClick: () => logStore.entries = [],\n            children: \"limpar os logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OperationLog, {\n          log: logStore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Welcome, {\n      visible: !dataObject.groups,\n      exampleClicked: loadExample\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoamTreeCsv, \"/wWkqaqSvlOvwuGb1W85wGTz58M=\", false, function () {\n  return [useDropzone];\n});\n\n_c = FoamTreeCsv;\nexport default FoamTreeCsv;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoamTreeCsv\");","map":{"version":3,"sources":["/home/charles/Desktop/foamtree-Site1/src/FoamTreeCsv.js"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","FoamTreePanel","prepareDataObject","forEachDescendant","SettingsPanel","useDropzone","Worksheet2FoamTree","Welcome","OperationLog","saveAs","cloneDeep","logStore","XLSX","ButtonLink","App","baseStyle","borderWidth","borderRadius","borderColor","borderStyle","background","outline","position","top","bottom","left","right","activeStyle","acceptStyle","rejectStyle","FoamTreeCsv","dataObject","setDataObject","loadSpreadsheet","buffer","fileName","entries","push","message","code","window","setTimeout","workbook","read","type","sheet","Sheets","SheetNames","parser","parse","getLog","map","l","getMessage","forEach","e","propertyNames","getPropertyNames","getDataObject","count","groups","reduce","counter","cnt","group","onDrop","acceptedFiles","length","file","reader","FileReader","onabort","console","log","onerror","onload","result","name","readAsArrayBuffer","getRootProps","isDragActive","isDragAccept","isDragReject","style","loadExample","fetch","then","response","arrayBuffer","process","env","NODE_ENV","foamTreeRef","undefined","exportFoamTreeData","extesion","fn","x","current","data","get","Blob","JSON","stringify","exportJson","exportJsonP","json","visibility","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { FoamTreePanel, prepareDataObject, forEachDescendant } from \"./FoamTreePanel.js\";\nimport SettingsPanel from \"./SettingsPanel.js\";\nimport { useDropzone } from 'react-dropzone'\nimport { Worksheet2FoamTree } from \"./carrotsearch/spreadsheet.js\";\nimport { Welcome } from \"./Welcome.js\";\nimport { OperationLog } from \"./OperationLog.js\";\nimport { saveAs } from 'file-saver'\nimport cloneDeep from \"lodash.clonedeep\";\n\nimport { logStore } from \"./stores.js\";\n\nimport XLSX from \"xlsx\";\nimport './FoamTreeCsv.css';\nimport { ButtonLink } from \"./carrotsearch/ui/ButtonLink.js\";\nimport App from \"./App\";\n\nconst baseStyle = {\n  borderWidth: 4,\n  borderRadius: 2,\n  borderColor: 'transparent',\n  borderStyle: 'dashed',\n  background: \"#fff\",\n  outline: 'none',\n  position: \"absolute\",\n  top: \"0.5em\",\n  bottom: \"0.5em\",\n  left: \"0.5em\",\n  right: \"0.5em\"\n  // boxShadow: \"0 0 5px rgba(0, 0, 0, 0.1)\"\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: 'hsl(90, 100%, 35%)'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst FoamTreeCsv = () => {\n  const [dataObject, setDataObject] = useState({});\n  const loadSpreadsheet = (buffer, fileName) => {\n    logStore.entries.push({ message: `Parsing ${fileName}.`, code: \"I001\" });\n    window.setTimeout(() => {\n      const workbook = XLSX.read(buffer, { type: \"array\" });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const parser = Worksheet2FoamTree.parse(sheet);\n      parser.getLog()\n        .map(l => ({ code: l.code, message: Worksheet2FoamTree.getMessage(l) }))\n        .forEach(e => logStore.entries.push(e));\n\n      const propertyNames = parser.getPropertyNames();\n      const dataObject = prepareDataObject(propertyNames, parser.getDataObject());\n      const count = dataObject ? dataObject.groups.reduce(function counter(cnt, group) {\n        return cnt + 1 + (group.groups ? group.groups.reduce(counter, 0) : 0);\n      }, 0) : 0;\n\n      logStore.entries.push({ message: `Visualizing ${fileName} (${count} groups).`, code: \"I002\" });\n      setDataObject(dataObject);\n    }, 50);\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n    const file = acceptedFiles[0];\n    const reader = new FileReader()\n\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = () => loadSpreadsheet(reader.result, file.name)\n    reader.readAsArrayBuffer(file);\n  }, [])\n  const {\n    getRootProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ onDrop });\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  const loadExample = useCallback(name => {\n    setDataObject({ groups: [] });\n    window.setTimeout(() => {\n      fetch(`examples/${name}`)\n        .then(response => response.arrayBuffer())\n        .then(response => loadSpreadsheet(response, name));\n    }, 50);\n  }, []);\n\n  // Load some example on start\n  useEffect(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      loadExample(`example.ods`);\n    }\n  }, [loadExample]);\n\n  const foamTreeRef = useRef(undefined);\n\n  const exportFoamTreeData = (extesion, fn = x => x) => {\n    if (foamTreeRef.current) {\n      const data = cloneDeep(foamTreeRef.current.get(\"dataObject\"));\n      forEachDescendant(data, group => {\n        delete group[\"parent\"];\n      });\n      saveAs(new Blob([fn(JSON.stringify(data, null, \"  \"))],\n        { type: \"application/json;charset=utf-8\" }), `foamtree-data.${extesion}`);\n    }\n  };\n\n  const exportJson = useCallback(() => {\n    exportFoamTreeData(\"json\");\n  }, []);\n  const exportJsonP = useCallback(() => {\n    exportFoamTreeData(\"js\", json => {\n      return `modelDataAvailable(${json})`;\n    });\n  }, []);\n\n  return (\n    <div {...getRootProps({ style })}>\n\n      <div className=\"App\">\n        <App />\n      </div>\n\n      <main className=\"FoamTreeCsv\" style={{ visibility: !!dataObject.groups ? \"visible\" : \"hidden\" }}>\n        <div className=\"visualization\">\n          <FoamTreePanel dataObject={dataObject} foamTreeRef={foamTreeRef} />\n        </div>\n        <div className=\"settings\">\n          <SettingsPanel welcomeClicked={() => setDataObject({})} exportJsonClicked={exportJson} exportJsonPClicked={exportJsonP} />\n          <hr />\n          <div style={{ textAlign: \"right\", marginBottom: \"0.25em\" }}>\n            <ButtonLink onClick={() => logStore.entries = []}>limpar os logs</ButtonLink>\n          </div>\n          <OperationLog log={logStore} />\n        </div>\n      </main>\n      <Welcome visible={!dataObject.groups} exampleClicked={loadExample} />\n    </div>\n  );\n};\n\nexport default FoamTreeCsv;\n"]},"metadata":{},"sourceType":"module"}